apply plugin: 'com.android.library'

ext {

    bintrayRepo = 'HAT-API-Android'
    bintrayName = 'HAT-API-Android'

    publishedGroupId = 'com.hubofallthings.com'
    libraryName = 'HAT-API-Android'
    artifact = 'HAT-API-Android'

    libraryDescription = 'Contains the basic APIs for exchanging data with the HAT'

    siteUrl = 'https://github.com/whiteshadow-gr/HAT-API-Android'
    gitUrl = 'https://github.com/whiteshadow-gr/HAT-API-Android.git'

    libraryVersion = '0.0.26'

    developerId = 'whiteshadow'
    developerName = 'Marios Tsekis'
    developerEmail = 'tsekis.marios@gmail.com'

    licenseName = 'MPL-2.0'
    licenseUrl = 'https://opensource.org/licenses/MPL-2.0'
    allLicenses = ["MPL-2.0"]
}

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {

    compileSdkVersion 28
    defaultConfig {

        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            jniDebuggable true

        }
        debug {
            debuggable true
            jniDebuggable true
            minifyEnabled false
        }
    }
    lintOptions {
        abortOnError false
    }

}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.1.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.1'
    testImplementation 'org.mockito:mockito-core:2.7.21'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.github.kittinunf.fuel:fuel-android:1.14.0' //for Android
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.4.1"
    implementation 'com.auth0.android:jwtdecode:1.1.1'
    implementation 'com.nimbusds:nimbus-jose-jwt:5.8'
    implementation "org.jetbrains.anko:anko-commons:0.10.4"
    implementation 'org.bouncycastle:bcprov-jdk15on:1.59'
    androidTestImplementation 'junit:junit:4.12'
}
apply plugin: 'com.jfrog.bintray'

version = libraryVersion

if (project.hasProperty("android")) { // Android libraries

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }
} else { // Java libraries

    task sourcesJar(type: Jar, dependsOn: classes) {

        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

artifacts {

    //archives javadocJar
    archives sourcesJar
}

apply plugin: 'maven'

task createPOM {

    pom {

        project {

            groupId 'com.hubofallthings.HAT_API_Android'
            artifactId 'HAT_API_Android'
            version '0.0.26'

            inceptionYear '2018'
            licenses {

                license {

                    name 'MPL-2.0'
                    url 'https://opensource.org/licenses/MPL-2.0'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("pom.xml")
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {

    createPOM
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {

        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {

            desc = libraryDescription
            gpg {

                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}